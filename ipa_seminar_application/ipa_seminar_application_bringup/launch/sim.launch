<?xml version="1.0"?>
<launch>

	<arg name="robot"/>

	<!-- upload robot_description -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find ipa_seminar_application_bringup)/urdf/$(arg robot).urdf.xacro'" />

	<!-- launch an empty world -->
	<include file="$(find gazebo_worlds)/launch/empty_world.launch" />

	<!-- push robot_description to factory and spawn robot in gazebo -->
	<node name="spawn_gazebo_model" pkg="gazebo" type="spawn_model" args="-urdf -param robot_description -model arm -z 0.01 " respawn="false" output="screen" />

	<!-- Controller Manager -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/controller_manager.launch" />

	<!-- start arm -->
	<rosparam file="$(find ipa_seminar_application_bringup)/controller/arm_controller_$(arg robot).yaml" command="load"/>
	<node name="arm_controller_spawner" pkg="cob_controller_configuration_gazebo" type="spawner" args="arm_controller" />
	<group ns="arm_controller">
		<node name="arm_joint_trajectory_action_node" pkg="joint_trajectory_action" type="joint_trajectory_action" />
	</group>
	
	<!-- start gripper -->
	<rosparam file="$(find ipa_seminar_application_bringup)/controller/pg70_controller.yaml" command="load" />
	<node name="gripper_controller_spawner" pkg="cob_controller_configuration_gazebo" type="spawner" args="gripper_controller" />
	<group ns="gripper_controller">
		<node name="gripper_joint_trajectory_action_node" pkg="joint_trajectory_action" type="joint_trajectory_action" />
	</group>
	<node pkg="ipa_seminar_application_bringup" name="fake_gripper" type="fake_gripper.py" />

	<!-- send objects locations to parameter server -->
	<rosparam command="delete" param="/objects"/>
	<rosparam command="load" ns="objects" file="$(find ipa_seminar_application_bringup)/config/object_locations.yaml"/>
	<!--node pkg="cob_bringup_sim" name="spawn_object" type="spawn_object.py" args="all"/-->
	<node pkg="ipa_seminar_application_bringup" name="area_publisher" type="area_publisher.py"/>

	<!-- move it -->
	<include file="$(find ipa_seminar_application_bringup)/../ipa_seminar_application_moveit_config_$(arg robot)/launch/move_group.launch" />

	<!-- load default configuration -->
	<rosparam command="load" ns="/script_server/arm" file="$(find ipa_seminar_application_bringup)/config/arm_joint_configurations_$(arg robot).yaml"/>
	<rosparam command="load" ns="/script_server/gripper" file="$(find ipa_seminar_application_bringup)/config/gripper_joint_configurations.yaml"/>

	<!-- prepare robot -->
	<node pkg="ipa_seminar_application_bringup" name="prepare_robot" type="prepare_robot.py" />

</launch>
